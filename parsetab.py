
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALnonassocLESSLESSEQUALGREATERGREATEREQUALleftPLUSMINUSAND AS CLASS DIM DIVIDE DOUBLE ELSEIF END ENDIF EQUAL GREATER GREATEREQUAL IF LESS LESSEQUAL MINUS NUMERO PLUS PUBLIC STRING SUB TEXTO THEN TIMES VARIABLEprogram : PUBLIC CLASS VARIABLE declaration_list END CLASS\n    declaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n                   | selection_stmt\n\tvar_declaration : DIM VARIABLE AS tipo_dato \n                        | DIM VARIABLE\n\ttipo_dato : STRING \n                | DOUBLE\n\tselection_stmt : IF expression THEN statement_list END IF\n\t\t\t\t\t  | IF expression THEN statement_list selection END IF\n\tselection : ELSEIF expression THEN statement_list\n                 |  ELSEIF expression THEN statement_list selection\n\t statement_list : statement_list statement\n\t\t\t\t\t  | empty\n\tstatement : expression\n\texpression : var EQUAL expression\n\t\t\t\t  | simple_expression\n\t\t\t      | expression AND expression\n\tsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : LESS\n\t\t\t | LESSEQUAL\n\t\t\t | GREATER\n\t\t\t | GREATEREQUAL\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n\tvar : VARIABLE\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : var\n\t\t\t  | NUMERO\n              | TEXTO\n\tempty :'
    
_lr_action_items = {'PUBLIC':([0,],[2,]),'$end':([1,23,],[0,-1,]),'CLASS':([2,11,],[3,23,]),'VARIABLE':([3,9,10,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,53,54,59,60,],[4,13,17,-35,-18,-28,-21,-27,-32,-36,-37,-38,17,17,17,17,-22,-23,-24,-25,-29,-30,17,-33,-34,17,-15,-19,-17,-20,-35,-26,-31,-16,-14,17,-38,17,]),'DIM':([4,5,6,7,8,12,13,39,40,41,55,58,],[9,9,-3,-4,-5,-2,-7,-6,-8,-9,-10,-11,]),'IF':([4,5,6,7,8,12,13,39,40,41,51,55,56,58,],[10,10,-3,-4,-5,-2,-7,-6,-8,-9,55,-10,58,-11,]),'END':([5,6,7,8,12,13,15,16,17,18,19,20,21,22,25,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,58,59,60,61,],[11,-3,-4,-5,-2,-7,-35,-18,-28,-21,-27,-32,-36,-37,-38,-6,-8,-9,51,-15,-19,-17,-20,-35,-26,-31,-16,56,-14,-10,-11,-38,-12,-13,]),'NUMERO':([10,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,53,54,59,60,],[21,-35,-18,-28,-21,-27,-32,-36,-37,-38,21,21,21,21,-22,-23,-24,-25,-29,-30,21,-33,-34,21,-15,-19,-17,-20,-35,-26,-31,-16,-14,21,-38,21,]),'TEXTO':([10,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,53,54,59,60,],[22,-35,-18,-28,-21,-27,-32,-36,-37,-38,22,22,22,22,-22,-23,-24,-25,-29,-30,22,-33,-34,22,-15,-19,-17,-20,-35,-26,-31,-16,-14,22,-38,22,]),'AS':([13,],[24,]),'THEN':([14,15,16,17,18,19,20,21,22,44,45,46,47,48,49,57,],[25,-35,-18,-28,-21,-27,-32,-36,-37,-19,-17,-20,-35,-26,-31,59,]),'AND':([14,15,16,17,18,19,20,21,22,44,45,46,47,48,49,50,57,],[26,-35,-18,-28,-21,-27,-32,-36,-37,26,-17,-20,-35,-26,-31,26,26,]),'EQUAL':([15,17,],[27,-28,]),'TIMES':([15,17,19,20,21,22,47,48,49,],[-35,-28,37,-32,-36,-37,-35,37,-31,]),'DIVIDE':([15,17,19,20,21,22,47,48,49,],[-35,-28,38,-32,-36,-37,-35,38,-31,]),'LESS':([15,17,18,19,20,21,22,47,48,49,],[-35,-28,30,-27,-32,-36,-37,-35,-26,-31,]),'LESSEQUAL':([15,17,18,19,20,21,22,47,48,49,],[-35,-28,31,-27,-32,-36,-37,-35,-26,-31,]),'GREATER':([15,17,18,19,20,21,22,47,48,49,],[-35,-28,32,-27,-32,-36,-37,-35,-26,-31,]),'GREATEREQUAL':([15,17,18,19,20,21,22,47,48,49,],[-35,-28,33,-27,-32,-36,-37,-35,-26,-31,]),'PLUS':([15,17,18,19,20,21,22,46,47,48,49,],[-35,-28,34,-27,-32,-36,-37,34,-35,-26,-31,]),'MINUS':([15,17,18,19,20,21,22,46,47,48,49,],[-35,-28,35,-27,-32,-36,-37,35,-35,-26,-31,]),'ELSEIF':([15,16,17,18,19,20,21,22,25,42,43,44,45,46,47,48,49,50,53,59,60,],[-35,-18,-28,-21,-27,-32,-36,-37,-38,54,-15,-19,-17,-20,-35,-26,-31,-16,-14,-38,54,]),'STRING':([24,],[40,]),'DOUBLE':([24,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([4,],[5,]),'declaration':([4,5,],[6,12,]),'var_declaration':([4,5,],[7,7,]),'selection_stmt':([4,5,],[8,8,]),'expression':([10,26,27,42,54,60,],[14,44,45,50,57,50,]),'var':([10,26,27,28,29,36,42,54,60,],[15,15,15,47,47,47,15,15,15,]),'simple_expression':([10,26,27,42,54,60,],[16,16,16,16,16,16,]),'additive_expression':([10,26,27,28,42,54,60,],[18,18,18,46,18,18,18,]),'term':([10,26,27,28,29,42,54,60,],[19,19,19,19,48,19,19,19,]),'factor':([10,26,27,28,29,36,42,54,60,],[20,20,20,20,20,49,20,20,20,]),'relop':([18,],[28,]),'addop':([18,46,],[29,29,]),'mulop':([19,48,],[36,36,]),'tipo_dato':([24,],[39,]),'statement_list':([25,59,],[42,60,]),'empty':([25,59,],[43,43,]),'selection':([42,60,],[52,61,]),'statement':([42,60,],[53,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PUBLIC CLASS VARIABLE declaration_list END CLASS','program',6,'p_program','Sintactico.py',15),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Sintactico.py',21),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Sintactico.py',22),
  ('declaration -> var_declaration','declaration',1,'p_declaration','Sintactico.py',26),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','Sintactico.py',27),
  ('var_declaration -> DIM VARIABLE AS tipo_dato','var_declaration',4,'p_var_declaration','Sintactico.py',33),
  ('var_declaration -> DIM VARIABLE','var_declaration',2,'p_var_declaration','Sintactico.py',34),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','Sintactico.py',40),
  ('tipo_dato -> DOUBLE','tipo_dato',1,'p_tipo_dato','Sintactico.py',41),
  ('selection_stmt -> IF expression THEN statement_list END IF','selection_stmt',6,'p_selection_stmt','Sintactico.py',47),
  ('selection_stmt -> IF expression THEN statement_list selection END IF','selection_stmt',7,'p_selection_stmt','Sintactico.py',48),
  ('selection -> ELSEIF expression THEN statement_list','selection',4,'p_selection','Sintactico.py',53),
  ('selection -> ELSEIF expression THEN statement_list selection','selection',5,'p_selection','Sintactico.py',54),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','Sintactico.py',60),
  ('statement_list -> empty','statement_list',1,'p_statement_list','Sintactico.py',61),
  ('statement -> expression','statement',1,'p_statement','Sintactico.py',66),
  ('expression -> var EQUAL expression','expression',3,'p_expression','Sintactico.py',72),
  ('expression -> simple_expression','expression',1,'p_expression','Sintactico.py',73),
  ('expression -> expression AND expression','expression',3,'p_expression','Sintactico.py',74),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','Sintactico.py',80),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','Sintactico.py',81),
  ('relop -> LESS','relop',1,'p_relop','Sintactico.py',87),
  ('relop -> LESSEQUAL','relop',1,'p_relop','Sintactico.py',88),
  ('relop -> GREATER','relop',1,'p_relop','Sintactico.py',89),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','Sintactico.py',90),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','Sintactico.py',96),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','Sintactico.py',97),
  ('var -> VARIABLE','var',1,'p_var','Sintactico.py',102),
  ('addop -> PLUS','addop',1,'p_addop','Sintactico.py',108),
  ('addop -> MINUS','addop',1,'p_addop','Sintactico.py',109),
  ('term -> term mulop factor','term',3,'p_term','Sintactico.py',115),
  ('term -> factor','term',1,'p_term','Sintactico.py',116),
  ('mulop -> TIMES','mulop',1,'p_mulop','Sintactico.py',122),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','Sintactico.py',123),
  ('factor -> var','factor',1,'p_factor','Sintactico.py',129),
  ('factor -> NUMERO','factor',1,'p_factor','Sintactico.py',130),
  ('factor -> TEXTO','factor',1,'p_factor','Sintactico.py',131),
  ('empty -> <empty>','empty',0,'p_empty','Sintactico.py',137),
]
